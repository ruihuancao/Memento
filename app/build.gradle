apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'//, 'x86_64', 'arm64-v8a'
        }
    }


    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'
        disable 'OldTargetApi'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        debug {
            storeFile file("android.keystore")
            storePassword keystore_passwd
            keyAlias "android.keystore"
            keyPassword keystore_passwd
        }

        // 生成keystore
        // keytool -genkey -alias android.keystore -keyalg RSA -validity 20000 -keystore android.keystore
        release {
            storeFile file("android.keystore")
            storePassword keystore_passwd
            keyAlias "android.keystore"
            keyPassword keystore_passwd
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            // 开启混淆
            minifyEnabled true
            // 混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // 版本名前缀
            versionNameSuffix ""
            // 开启ZipAlign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
        }
        debug {
            signingConfig signingConfigs.debug
            // 开启混淆
            minifyEnabled false
            // 混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // 版本名前缀
            versionNameSuffix "-debug"
            // 不开启ZipAlign优化
            zipAlignEnabled false
            // 不移除无用的resource文件
            shrinkResources false
        }
    }

    productFlavors.all { flavor ->
        manifestPlaceholders.put("LEANCLOUD_CHANNEL_VALUE", name)
    }

    productFlavors {
        Test {}
        // other channels
    }

    applicationVariants.all {
        variant ->
            variant.outputs.each {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = outputFile.name.replace(".apk", "-${defaultConfig.versionName}.apk")
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
            }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':leancloudlibrary')
    compile project(':themelibrary')
    compile rootProject.ext.appcompatVersion
    compile rootProject.ext.designVersion
    compile rootProject.ext.cardviewVersion
    compile rootProject.ext.recyclerviewVersion
    compile rootProject.ext.customtabsVersion
    compile rootProject.ext.supportv4Version
    compile rootProject.ext.paletteVersion

    debugCompile rootProject.ext.leakcanaryDebugVersion
    releaseCompile rootProject.ext.leakcanaryReleaseVersion
    testCompile rootProject.ext.leakcanaryTestVersion

    compile rootProject.ext.stethoVersion
    compile rootProject.ext.stethoOkhttpVersion

    compile rootProject.ext.filedownloaderVersion
    compile rootProject.ext.glideVersion
    compile rootProject.ext.glideokhttp3Version

    compile rootProject.ext.MPAndroidChartVersion
    compile rootProject.ext.butterknifeVersion
    compile rootProject.ext.bottomBarVersion
    compile rootProject.ext.statusBarVersion
    compile rootProject.ext.andfixVersion
    compile rootProject.ext.buglyVersion
    compile rootProject.ext.baseRecyclerViewVersion

    compile rootProject.ext.rxAndroidVersion
    compile rootProject.ext.rxJavaVersion
    //dagger2
    compile rootProject.ext.daggerVersion
    apt rootProject.ext.daggerCompilerVersion
    testApt rootProject.ext.daggerCompilerVersion
    androidTestApt rootProject.ext.daggerCompilerVersion
    provided rootProject.ext.javaAnnotationVersion
    //调试工具
    compile rootProject.ext.retrofit2Version
    compile rootProject.ext.retrofit2GsonVersion
    compile rootProject.ext.retrofit2RxjavaVersion
    compile rootProject.ext.retrofit2ScalarsVersion
    compile rootProject.ext.okHttpLoggingVersion
    compile rootProject.ext.eventBusVersion
    compile rootProject.ext.greendaoVersion
    compile rootProject.ext.greendaoGeneratorVersion
    //日志
    compile rootProject.ext.loggerVersion
    compile 'com.android.support:support-v4:23.4.0'
}

